apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

// CI
def isCi = "true".equals(System.getenv("CI"))
def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "com.droibit.quickly"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName

        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    signingConfigs {
        debug {
            storeFile rootProject.file('keystore/debug.keystore')
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    dexOptions {
        // Skip pre-dexing when running on CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !isCi
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'asm-license.txt'
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    compile "com.android.support:support-v4:$supportLibraryVersion"
    compile "com.android.support:appcompat-v7:$supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$supportLibraryVersion"
    compile "com.android.support:cardview-v7:$supportLibraryVersion"
    compile "com.android.support:design:$supportLibraryVersion"
    compile "com.android.support:preference-v14:$supportLibraryVersion"

    compile "com.github.salomonbrys.kodein:kodein-android:$kodeinAndroidVersion"

    kapt "com.github.gfx.android.orma:orma-processor:$ormaVersion"
    compile "com.github.gfx.android.orma:orma:$ormaVersion"

    compile "io.reactivex:rxjava:$rxJavaVersion"
    compile "io.reactivex:rxkotlin:$rxKotlinVersion"
    compile "io.reactivex:rxandroid:$rxAndroidVersion"
    compile "com.jakewharton.rxrelay:rxrelay:$rxRelayVersion"

    compile "com.lapism:searchview:$searchViewVersion"
    compile "com.github.bumptech.glide:glide:$glideVersion"

    compile "com.jakewharton.timber:timber:$timberVersion"
    compile "com.chibatching:kotpref:$kotprefVersion"
    compile "com.github.droibit.chopsticks:chopstick:$chopsticksVersion"
    compile "com.github.droibit.chopsticks:chopstick-preference:$chopsticksVersion"
    compile "com.github.droibit.chopsticks:chopstick-resource:$chopsticksVersion"

    debugCompile "com.facebook.stetho:stetho:$stethoVersion"

    debugCompile "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"

    androidTestCompile "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestCompile "com.android.support:support-annotations:$supportLibraryVersion"

    testCompile "org.robolectric:robolectric:$robolectricVersion"
    testCompile "junit:junit:$junitVersion"
    testCompile "org.assertj:assertj-core:$assertjVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
}

apply plugin: 'com.cookpad.android.licensetools'